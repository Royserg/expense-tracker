{"version":3,"sources":["store/models/index.ts","store/models/transactions.ts","store/models/audit.ts","store/index.ts","App/styles..ts","components/Header/styles.ts","components/Header/index.tsx","components/Header/Header.tsx","components/Balance/index.tsx","components/Balance/Balance.tsx","utils/constants.ts","components/IncomeExpenses/styles.ts","components/IncomeExpenses/index.tsx","components/IncomeExpenses/IncomeExpenses.tsx","components/TransactionList/styles.ts","components/TransactionList/TransactionListItem/styles.ts","components/TransactionList/TransactionListItem/index.tsx","components/TransactionList/TransactionListItem/TransactionListItem.tsx","components/TransactionList/index.tsx","components/TransactionList/TransactionList.tsx","views/Home/index.tsx","views/Home/Home.tsx","views/Transactions/index.tsx","views/Transactions/Transactions.tsx","components/BottomAppBar/styles.ts","components/AddTransactionModal/styles.ts","components/AddTransactionModal/index.tsx","components/AddTransactionModal/AddTransactionModal.tsx","components/BottomAppBar/index.tsx","components/BottomAppBar/BottomAppBar.tsx","App/index.tsx","App/App.tsx","index.tsx"],"names":["storeModel","transactions","items","computed","state","reverse","totalBalance","reduce","acc","t","amount","toFixed","totalIncome","filter","totalExpense","addTransaction","action","payload","transaction","id","uuidv4","push","deleteTransaction","index","findIndex","splice","saveTransactions","localStorage","setItem","JSON","stringify","loadTransactions","lsTransactions","getItem","parse","audit","logs","typedHooks","createTypedHooks","useStoreActions","useStoreState","useStoreDispatch","store","createStore","useStyles","makeStyles","root","height","overflow","position","textAlign","paddingTop","paddingBottom","link","textDecoration","color","grey","Header","title","classes","Typography","variant","component","className","to","Balance","colors","greenPrimary","green","redAccent","redPrimary","red","redSecondary","container","padding","marginTop","display","valueContainer","flexGrow","flexDirection","alignItems","justifyContent","divider","backgroundColor","incomeHeading","marginBottom","fontWeight","letterSpacing","expenseHeading","IncomeExpenses","Paper","elevation","Divider","orientation","flexItem","listContainer","width","margin","opacity","cursor","left","borderRadius","border","background","transition","redBorder","borderRight","greenBorder","TransactionListItem","description","actions","ListItem","disableGutters","dense","clsx","onClick","TransactionList","List","map","key","Home","Transactions","theme","appBar","top","bottom","appBarLink","fontSize","marginRight","borderBottom","linkActive","toolbar","grow","fabButton","zIndex","right","dialogContent","dialogActions","confirmButton","marginLeft","cancelButton","AddTransactionModal","isOpen","close","useForm","register","handleSubmit","errors","reset","Dialog","open","onClose","aria-labelledby","fullWidth","maxWidth","disableBackdropClick","DialogTitle","noValidate","onSubmit","data","timestamp","DateTime","local","toMillis","date","DialogContent","TextField","InputLabelProps","shrink","label","placeholder","inputProps","name","ref","required","error","helperText","type","DialogActions","disableSpacing","Button","BottomAppBar","useState","isModalOpen","setIsModalOpen","AppBar","positionAbsolute","Toolbar","Fab","aria-label","App","window","addEventListener","e","preventDefault","useEffect","CssBaseline","Container","exact","path","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.85cebefe.chunk.js","sourcesContent":["import transactionsModel, { TransactionsModel } from './transactions'\r\nimport auditModel, { AuditModel } from './audit'\r\n\r\nexport interface StoreModel {\r\n  transactions: TransactionsModel,\r\n  audit: AuditModel,\r\n}\r\n\r\nconst storeModel: StoreModel = {\r\n  transactions: transactionsModel,\r\n  audit: auditModel,\r\n}\r\n\r\nexport default storeModel","import { Transaction, NewTransaction } from '../../models'\r\nimport { Action, action, Computed, computed } from 'easy-peasy'\r\nimport { v4 as uuidv4 } from 'uuid'\r\n\r\nexport interface TransactionsModel {\r\n  items: Transaction[]\r\n  transactions: Computed<TransactionsModel, Transaction[]>\r\n  totalBalance: Computed<TransactionsModel, string>\r\n  totalIncome: Computed<TransactionsModel, string>\r\n  totalExpense: Computed<TransactionsModel, string>\r\n  addTransaction: Action<TransactionsModel, NewTransaction>\r\n  deleteTransaction: Action<TransactionsModel, string>\r\n  saveTransactions: Action<TransactionsModel, void>\r\n  loadTransactions: Action<TransactionsModel, void>\r\n}\r\n\r\nconst transactionsModel: TransactionsModel = {\r\n  items: [],\r\n  /* Computed */\r\n  transactions: computed((state) => state.items.reverse()),\r\n  totalBalance: computed((state) => {\r\n    return state.items.reduce((acc, t) => acc + t.amount, 0).toFixed(2)\r\n  }),\r\n  totalIncome: computed((state) => {\r\n    const income = state.items.filter((t) => t.amount > 0)\r\n    return income.reduce((acc, t) => acc + t.amount, 0).toFixed(2)\r\n  }),\r\n  totalExpense: computed((state) => {\r\n    const expenses = state.items.filter((t) => t.amount < 0)\r\n    return expenses.reduce((acc, t) => acc + t.amount, 0).toFixed(2)\r\n  }),\r\n  /* Actions */\r\n  addTransaction: action((state, payload) => {\r\n    const transaction: Transaction = {\r\n      id: uuidv4(),\r\n      ...payload,\r\n    }\r\n    state.items.push(transaction)\r\n  }),\r\n  deleteTransaction: action((state, payload) => {\r\n    const index = state.items.findIndex((t) => t.id === payload)\r\n    if (index !== -1) state.items.splice(index, 1)\r\n  }),\r\n  saveTransactions: action((state) => {\r\n    /* Save state to localStorage */\r\n    localStorage.setItem('transactions', JSON.stringify(state.items))\r\n  }),\r\n  loadTransactions: action((state) => {\r\n    /* Retrieve transactions from localStorage */\r\n    const lsTransactions = localStorage.getItem('transactions')\r\n    if (lsTransactions) {\r\n      const transactions = JSON.parse(lsTransactions)\r\n      state.items = transactions.reverse()\r\n    }\r\n  }),\r\n}\r\n\r\nexport default transactionsModel\r\n","\r\nexport interface AuditModel {\r\n  logs: string[],\r\n}\r\n\r\nconst auditModel: AuditModel = {\r\n  logs: [],\r\n}\r\n\r\nexport default auditModel\r\n","import { createStore, createTypedHooks } from 'easy-peasy'\r\nimport storeModel, { StoreModel } from './models'\r\n\r\n// Create typed hooks\r\nconst typedHooks = createTypedHooks<StoreModel>()\r\n// Export typed hooks\r\nexport const useStoreActions = typedHooks.useStoreActions\r\nexport const useStoreDispatch = typedHooks.useStoreDispatch\r\nexport const useStoreState = typedHooks.useStoreState\r\n\r\n// Create Store\r\nconst store = createStore(storeModel)\r\n\r\nexport default store\r\n","import makeStyles from \"@material-ui/core/styles/makeStyles\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    height: \"100vh\",\r\n    overflow: \"hidden\",\r\n    position: \"relative\",\r\n  },\r\n});\r\n\r\nexport default useStyles;\r\n","import makeStyles from '@material-ui/core/styles/makeStyles'\r\nimport grey from '@material-ui/core/colors/grey'\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    textAlign: 'center',\r\n    paddingTop: '1rem',\r\n    paddingBottom: '1rem',\r\n  },\r\n  link: {\r\n    textDecoration: 'none',\r\n    color: grey['900'],\r\n  }\r\n})\r\n\r\nexport default useStyles\r\n","import Header from './Header'\r\n\r\nexport default Header\r\n","import React, { FC } from 'react'\r\nimport { Link } from 'react-router-dom'\r\n/* Styles */\r\nimport useStyles from './styles'\r\n/* Components */\r\nimport Typography from '@material-ui/core/Typography'\r\n\r\n\r\ninterface HeaderProps {\r\n  title: string,\r\n}\r\n\r\nconst Header: FC<HeaderProps> = ({ title }) => {\r\n\r\n  const classes = useStyles()\r\n\r\n  return (\r\n    <Typography variant='h5' component='h2' className={classes.root}>\r\n      <Link to='/' className={classes.link}>\r\n        {title}\r\n      </Link>\r\n    </Typography>\r\n  )\r\n}\r\n\r\nexport default Header\r\n","import Balance from './Balance'\r\n\r\nexport default Balance\r\n","import React, { FC } from 'react'\r\n/* Components */\r\nimport Typography from '@material-ui/core/Typography'\r\nimport { useStoreState } from '../../store'\r\n\r\n\r\nconst Balance: FC = () => {\r\n  const totalBalance = useStoreState(state => state.transactions.totalBalance)\r\n\r\n  return (\r\n    <>\r\n      <Typography variant='h6'>\r\n        Your Balance\r\n      </Typography>\r\n      <Typography variant='h4'>\r\n        {totalBalance}\r\n      </Typography>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Balance\r\n","import red from '@material-ui/core/colors/red'\r\nimport green from '@material-ui/core/colors/green'\r\n\r\nexport const colors = {\r\n  greenPrimary: green[600],\r\n  redAccent: '#f50057',\r\n  redPrimary: red[600],\r\n  redSecondary: red[700],\r\n}\r\n","import makeStyles from '@material-ui/core/styles/makeStyles'\r\nimport { colors } from '../../utils/constants'\r\n\r\nconst useStyles = makeStyles({\r\n  container: {\r\n    padding: '.5rem',\r\n    marginTop: '1rem',\r\n    display: 'flex',\r\n  },\r\n  valueContainer: {\r\n    flexGrow: 1,\r\n    padding: '0.55rem',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  divider: {\r\n    height: '50px',\r\n    backgroundColor: '#222',\r\n  },\r\n  incomeHeading: {\r\n    marginBottom: '0.5rem',\r\n    fontWeight: 'bold',\r\n    color: colors.greenPrimary,\r\n    letterSpacing: '1px',\r\n  },\r\n  expenseHeading: {\r\n    marginBottom: '0.5rem',\r\n    fontWeight: 'bold',\r\n    color: colors.redPrimary,\r\n    letterSpacing: '1px',\r\n  },\r\n})\r\n\r\nexport default useStyles\r\n","import IncomeExpenses from './IncomeExpenses'\r\n\r\nexport default IncomeExpenses\r\n","import React, { FC } from 'react'\r\n/* Redux */\r\nimport { useStoreState } from '../../store'\r\n/* Styles */\r\nimport useStyles from './styles'\r\n/* Components */\r\nimport Typography from '@material-ui/core/Typography'\r\nimport Paper from '@material-ui/core/Paper'\r\nimport Divider from '@material-ui/core/Divider'\r\n\r\nconst IncomeExpenses: FC = () => {\r\n  const classes = useStyles()\r\n  const { totalIncome, totalExpense } = useStoreState(\r\n    (state) => state.transactions\r\n  )\r\n\r\n  return (\r\n    <Paper elevation={2} className={classes.container}>\r\n      <div className={classes.valueContainer}>\r\n        <Typography\r\n          variant='h5'\r\n          component='h2'\r\n          className={classes.incomeHeading}\r\n        >\r\n          Income\r\n        </Typography>\r\n        <Typography variant='h6' component='h4'>\r\n          +{totalIncome}\r\n        </Typography>\r\n      </div>\r\n      <Divider orientation='vertical' flexItem />\r\n      <div className={classes.valueContainer}>\r\n        <Typography\r\n          variant='h5'\r\n          component='h2'\r\n          className={classes.expenseHeading}\r\n        >\r\n          Expense\r\n        </Typography>\r\n        <Typography variant='h6' component='h4'>\r\n          {totalExpense}\r\n        </Typography>\r\n      </div>\r\n    </Paper>\r\n  )\r\n}\r\n\r\nexport default IncomeExpenses\r\n","import makeStyles from '@material-ui/core/styles/makeStyles'\r\n\r\nconst useStyles = makeStyles({\r\n  container: {\r\n    marginTop: '2rem',\r\n  },\r\n  listContainer: {\r\n    height: '45vh',\r\n    overflow: 'auto',\r\n  }\r\n})\r\n\r\nexport default useStyles\r\n","import makeStyles from '@material-ui/core/styles/makeStyles'\r\nimport { colors } from '../../../utils/constants'\r\n\r\nconst useStyles = makeStyles({\r\n  container: {\r\n    position: 'relative',\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n    width: '90%',\r\n    margin: '0 auto',\r\n    padding: '1rem',\r\n    '& .deleteBtn': {\r\n      opacity: '0',\r\n      position: 'absolute',\r\n      cursor: 'pointer',\r\n      left: '-15px',\r\n      borderRadius: '4px',\r\n      border: `1px solid ${colors.redPrimary}`,\r\n      background: colors.redSecondary,\r\n      color: 'white',\r\n      padding: '2px 6px',\r\n      transition: 'opacity 0.2s ease-in',\r\n    },\r\n    '&:hover .deleteBtn': {\r\n      opacity: '1',\r\n    },\r\n  },\r\n  redBorder: {\r\n    borderRight: `0.5rem solid ${colors.redPrimary}`,\r\n  },\r\n  greenBorder: {\r\n    borderRight: `0.5rem solid ${colors.greenPrimary}`,\r\n  },\r\n})\r\n\r\nexport default useStyles\r\n","import TransactionListItem from './TransactionListItem'\r\n\r\nexport default TransactionListItem\r\n","import React, { FC } from 'react'\r\nimport clsx from 'clsx'\r\n/* Styles */\r\nimport useStyles from './styles'\r\n/* Components */\r\nimport ListItem from '@material-ui/core/ListItem'\r\nimport Paper from '@material-ui/core/Paper'\r\nimport { useStoreActions } from '../../../store'\r\n\r\ninterface TransactionListItemProps {\r\n  id: string,\r\n  description: string,\r\n  amount: number,\r\n}\r\n\r\nconst TransactionListItem: FC<TransactionListItemProps> = ({\r\n  id,\r\n  description,\r\n  amount,\r\n}) => {\r\n  const classes = useStyles()\r\n  const deleteTransaction = useStoreActions(\r\n    (actions) => actions.transactions.deleteTransaction\r\n  )\r\n\r\n  return (\r\n    <ListItem disableGutters dense>\r\n      <Paper\r\n        elevation={2}\r\n        className={clsx(\r\n          classes.container,\r\n          amount > 0 ? classes.greenBorder : classes.redBorder\r\n        )}\r\n      >\r\n        <span>{description}</span>\r\n        <span>{amount}</span>\r\n        <button\r\n          className='deleteBtn'\r\n          title='Delete transaction'\r\n          onClick={handleDelete}\r\n        >\r\n          x\r\n        </button>\r\n      </Paper>\r\n    </ListItem>\r\n  )\r\n\r\n  /* Handlers */\r\n  function handleDelete() {\r\n    deleteTransaction(id)\r\n  }\r\n}\r\n\r\nexport default TransactionListItem\r\n","import TransactionList from './TransactionList'\r\n\r\nexport default TransactionList\r\n","import React, { FC } from 'react'\r\n/* Redux */\r\nimport { useStoreState } from '../../store'\r\n/* Styles */\r\nimport useStyles from './styles'\r\n/* Components */\r\nimport Typography from '@material-ui/core/Typography'\r\nimport Divider from '@material-ui/core/Divider'\r\nimport List from '@material-ui/core/List'\r\nimport TransactionListItem from './TransactionListItem'\r\n\r\nconst TransactionList: FC = () => {\r\n  const transactions = useStoreState((state) => state.transactions.transactions)\r\n\r\n  const classes = useStyles()\r\n\r\n  return (\r\n    <div className={classes.container}>\r\n      <Typography variant='h5' component='h3'>Transactions:</Typography>\r\n      <Divider />\r\n      <List classes={{ root: classes.listContainer }}>\r\n        { transactions.map((t) => {\r\n            return (\r\n              <TransactionListItem\r\n                key={t.id}\r\n                id={t.id}\r\n                description={t.description}\r\n                amount={t.amount}\r\n              />\r\n            )\r\n          })\r\n        }\r\n      </List>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default TransactionList\r\n","import Home from './Home'\r\n\r\nexport default Home\r\n","import React, { FC } from 'react'\r\n/* Components */\r\nimport Balance from '../../components/Balance'\r\nimport IncomeExpenses from '../../components/IncomeExpenses'\r\nimport TransactionList from '../../components/TransactionList'\r\n\r\n\r\nconst Home: FC = () => {\r\n  return (\r\n    <>\r\n      <Balance />\r\n      <IncomeExpenses />\r\n      <TransactionList />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Home\r\n","import Transactions from './Transactions'\r\n\r\nexport default Transactions\r\n","import React, { FC } from 'react'\r\n\r\nconst Transactions: FC = () => {\r\n  return (\r\n    <>\r\n      <h2>Transactions:</h2>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Transactions\r\n","import makeStyles from '@material-ui/core/styles/makeStyles'\r\nimport { colors } from '../../utils/constants'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  appBar: {\r\n    borderRadius: '50px 50px 0 0',\r\n    top: 'auto !important',\r\n    bottom: 0,\r\n    height: '50px',\r\n    '& active': {\r\n      color: 'blue',\r\n    }\r\n  },\r\n  appBarLink: {\r\n    textDecoration: 'none',\r\n    fontSize: '1.1rem',\r\n    color: 'black',\r\n    marginRight: '10px',\r\n    borderBottom: `1px solid transparent`,\r\n    marginTop: '-10px',\r\n    transition: 'all .3s',\r\n    '&:hover, &:focus': {\r\n      color: colors.redSecondary,\r\n      borderBottom: `1px solid ${colors.redSecondary}`,\r\n    }\r\n  },\r\n  linkActive: {\r\n    color: colors.redSecondary,\r\n    borderBottom: `1px solid ${colors.redSecondary}`,\r\n  },\r\n  toolbar: {\r\n    borderRadius: '50px 50px 0 0',\r\n    background: 'transparent',\r\n    display: 'flex',\r\n    justifyContent: 'flex-end',\r\n    alignItems: 'center',\r\n  },\r\n  grow: {\r\n    flexGrow: 1,\r\n  },\r\n  fabButton: {\r\n    position: 'absolute',\r\n    zIndex: 1,\r\n    top: -20,\r\n    left: 0,\r\n    right: 0,\r\n    margin: '0 auto',\r\n  },\r\n}))\r\n\r\nexport default useStyles\r\n","import { makeStyles } from \"@material-ui/core\"\r\nimport { colors } from '../../utils/constants'\r\n\r\nconst useStyles = makeStyles({\r\n  dialogContent: {\r\n    width: '75%',\r\n    margin: '0 auto',\r\n    marginBottom: '1rem',\r\n  },\r\n  dialogActions: {\r\n    display: 'flex',\r\n    justifyContent: 'flex-end',\r\n    alignItems: 'center',\r\n    paddingBottom: '1rem',\r\n    width: '70%',\r\n    margin: '0 auto',\r\n  },\r\n  confirmButton: {\r\n    background: colors.redAccent,\r\n    color: 'white',\r\n    border: `1px solid ${colors.redAccent}`,\r\n    marginLeft: '1rem',\r\n    '&:hover': {\r\n      color: colors.redAccent,\r\n    }\r\n  },\r\n  cancelButton: {\r\n    fontSize: '0.8rem',\r\n  },\r\n})\r\n\r\nexport default useStyles\r\n","import AddTransactionModal from './AddTransactionModal'\r\n\r\nexport default AddTransactionModal\r\n","import React, { FC } from 'react'\r\n/* Redux */\r\nimport { useStoreActions } from '../../store'\r\n/* Styles */\r\nimport useStyles from './styles'\r\nimport { NewTransaction } from '../../models'\r\nimport { useForm } from 'react-hook-form'\r\nimport { DateTime } from 'luxon'\r\n/* Components */\r\nimport Button from '@material-ui/core/Button'\r\nimport TextField from '@material-ui/core/TextField'\r\nimport Dialog from '@material-ui/core/Dialog'\r\nimport DialogActions from '@material-ui/core/DialogActions'\r\nimport DialogContent from '@material-ui/core/DialogContent'\r\nimport DialogTitle from '@material-ui/core/DialogTitle'\r\n\r\ninterface Inputs {\r\n  description: string,\r\n  amount: number,\r\n}\r\n\r\ninterface Props {\r\n  isOpen: boolean,\r\n  close: () => void,\r\n}\r\n\r\nconst AddTransactionModal: FC<Props> = ({ isOpen, close }) => {\r\n  const classes = useStyles()\r\n  const { register, handleSubmit, errors, reset } = useForm<Inputs>()\r\n  const addTransaction = useStoreActions((actions) => actions.transactions.addTransaction)\r\n\r\n  const onSubmit = (data: Inputs) => {\r\n    const { amount, description } = data\r\n    const timestamp = DateTime.local().toMillis()\r\n\r\n    const newTransaction: NewTransaction = {\r\n      description,\r\n      amount: +amount,\r\n      date: timestamp,\r\n    }\r\n\r\n    addTransaction(newTransaction)\r\n    /* Clear form */\r\n    reset({})\r\n    /* Close Modal */\r\n    close()\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Dialog\r\n        open={isOpen}\r\n        onClose={close}\r\n        aria-labelledby='form-dialog-title'\r\n        fullWidth={true}\r\n        maxWidth='sm'\r\n        disableBackdropClick\r\n      >\r\n        <DialogTitle id='form-dialog-title'>Add Transaction</DialogTitle>\r\n\r\n        <form noValidate onSubmit={handleSubmit(onSubmit)}>\r\n          <DialogContent classes={{ root: classes.dialogContent }}>\r\n            {/* Description Field */}\r\n            <TextField\r\n              fullWidth={true}\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n              label='Description'\r\n              placeholder='Enter description...'\r\n              variant='outlined'\r\n              margin='normal'\r\n              inputProps={{\r\n                name: 'description',\r\n                ref: register({ required: true }),\r\n              }}\r\n              error={errors.description ? true : false}\r\n              helperText='This field is required'\r\n            />\r\n\r\n            {/* Amount Field */}\r\n            <TextField\r\n              fullWidth={true}\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n              label='Amount'\r\n              placeholder='Enter amount...'\r\n              variant='outlined'\r\n              type='number'\r\n              margin='normal'\r\n              inputProps={{\r\n                name: 'amount',\r\n                ref: register({ required: true }),\r\n              }}\r\n              error={errors.amount ? true : false}\r\n              helperText={errors.amount ? 'Field is required' : 'Negative number for expense'}\r\n            />\r\n          </DialogContent>\r\n\r\n          <DialogActions classes={{ root: classes.dialogActions }} disableSpacing>\r\n            <Button onClick={close} className={classes.cancelButton}>\r\n              Cancel\r\n            </Button>\r\n            <Button type='submit' className={classes.confirmButton}>\r\n              Add Transaction\r\n            </Button>\r\n          </DialogActions>\r\n        </form>\r\n      </Dialog>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AddTransactionModal\r\n","import BottomAppBar from './BottomAppBar'\r\n\r\nexport default BottomAppBar\r\n","import React, { FC, useState } from 'react'\r\n// import { NavLink } from 'react-router-dom'\r\n/* Styles */\r\nimport useStyles from './styles'\r\n/* Components */\r\nimport AddTransactionModal from '../AddTransactionModal'\r\nimport AppBar from '@material-ui/core/AppBar'\r\nimport Toolbar from '@material-ui/core/Toolbar'\r\nimport Fab from '@material-ui/core/Fab'\r\n\r\nconst BottomAppBar: FC = () => {\r\n  const classes = useStyles()\r\n  const [isModalOpen, setIsModalOpen] = useState(false)\r\n\r\n  return (\r\n    <>\r\n      <AddTransactionModal\r\n        isOpen={isModalOpen}\r\n        close={() => setIsModalOpen(false)}\r\n      />\r\n      <AppBar\r\n        position='absolute'\r\n        color='transparent'\r\n        classes={{\r\n          positionAbsolute: classes.appBar,\r\n        }}\r\n      >\r\n        <Toolbar classes={{ root: classes.toolbar }}>\r\n          <Fab\r\n            color='secondary'\r\n            aria-label='add'\r\n            className={classes.fabButton}\r\n            onClick={handleFABClicked}\r\n          >\r\n            +\r\n          </Fab>\r\n          {/* <Next Feature> <NavLink to='/history' className={classes.appBarLink} activeClassName={classes.linkActive}>History</NavLink> */}\r\n        </Toolbar>\r\n      </AppBar>\r\n    </>\r\n  )\r\n\r\n  /* Handlers */\r\n  function handleFABClicked(): void {\r\n    setIsModalOpen(true)\r\n  }\r\n}\r\n\r\nexport default BottomAppBar\r\n","import App from './App'\r\n\r\nexport default App","import React, { FC, useEffect } from 'react'\r\nimport { Switch, Route } from 'react-router-dom'\r\n/* Redux */\r\nimport { useStoreActions } from '../store'\r\n/* Styles */\r\nimport useStyles from './styles.'\r\n/* Components */\r\nimport Header from '../components/Header'\r\n/* Views */\r\nimport Home from '../views/Home'\r\nimport Transactions from '../views/Transactions'\r\nimport CssBaseline from '@material-ui/core/CssBaseline'\r\nimport Container from '@material-ui/core/Container'\r\nimport BottomAppBar from '../components/BottomAppBar'\r\n\r\nconst App: FC = () => {\r\n  const classes = useStyles()\r\n\r\n  const { saveTransactions, loadTransactions } = useStoreActions(\r\n    (actions) => actions.transactions\r\n  )\r\n\r\n  /* Before refresh/closing tab save data to localStorage */\r\n  window.addEventListener('beforeunload', (e) => {\r\n    e.preventDefault()\r\n    saveTransactions()\r\n  })\r\n\r\n  useEffect(() => {\r\n    /* Load transactions from localStorage */\r\n    loadTransactions()\r\n  }, [loadTransactions])\r\n\r\n  return (\r\n    <>\r\n      {/* Material-UI css rest */}\r\n      <CssBaseline />\r\n      <Container maxWidth='sm' className={classes.root}>\r\n        <Header title={'Expense Tracker'} />\r\n\r\n        <Switch>\r\n          <Route exact path='/' component={Home} />\r\n          <Route exact path='/transactions' component={Transactions} />\r\n          {/* <Route exact path='/transactions/:id' component={Transaction}/> */}\r\n        </Switch>\r\n\r\n        <BottomAppBar />\r\n      </Container>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default App\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { BrowserRouter as Router } from 'react-router-dom'\r\n/* Redux */\r\nimport { StoreProvider } from 'easy-peasy'\r\nimport store from './store'\r\n/* Components */\r\nimport App from './App'\r\n\r\nReactDOM.render(\r\n  <StoreProvider store={store}>\r\n    <Router>\r\n      <App />\r\n    </Router>\r\n  </StoreProvider>,\r\n  document.getElementById('root')\r\n)\r\n"],"sourceRoot":""}